# .github/workflows/ci.yml
#
# Continuous-integration pipeline for µ-UNIX (“Avrix”)
# ────────────────────────────────────────────────────
# • Installs the AVR tool-chain via   ./setup.sh  (modern | legacy)
# • Configures an out-of-tree Meson *cross* build (ATmega328P)
# • Builds firmware and host-side unit tests
# • Runs the full test-suite (host tests auto-skip when cross-compiled)
# • Generates Sphinx + Doxygen docs and uploads them as artefacts
# • Publishes the compiled ELF/HEX images for each matrix entry
#
# The workflow is deliberately self-hosting:  setup.sh will build QEMU
# from source when the runner image lacks `qemu-system-avr`.

name: CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

env:
  # Less noisy Meson output in CI (still shows warnings and errors)
  MESON_PROGRESS_BAR: ninja

jobs:
  build:
    runs-on: ubuntu-latest          # 24.04 as of 2025-06; keeps image current
    strategy:
      fail-fast: false
      matrix:
        config: [ modern, legacy ]  # modern = gcc-avr 14.x; legacy = 7.3.x

    steps:
      # 0  Checkout ─────────────────────────────────────────────────────────
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 1

      # 1  Tool-chain install ───────────────────────────────────────────────
      - name: Install AVR tool-chain (${{ matrix.config }})
        run: sudo ./setup.sh --${{ matrix.config }}

      # 2  Meson configuration ──────────────────────────────────────────────
      - name: Configure cross-build
        run: |
          if [[ "${{ matrix.config }}" == "legacy" ]]; then
              CROSS_FILE=cross/atmega328p_gcc7.cross
              EXTRA_OPT="-Dc_std=c11"
          else
              CROSS_FILE=cross/atmega328p_gcc14.cross
              EXTRA_OPT="-Dc_std=c23"
          fi

          meson setup build --wipe \
              --cross-file "${CROSS_FILE}" \
              ${EXTRA_OPT}

      # 3  Compilation ──────────────────────────────────────────────────────
      - name: Compile targets
        run: meson compile -C build

      # 4  Tests ────────────────────────────────────────────────────────────
      - name: Run test-suite
        run: meson test -C build --print-errorlogs

      # 5  Documentation ────────────────────────────────────────────────────
      - name: Build documentation (Sphinx & Doxygen)
        run: meson compile -C build doc-doxygen doc-sphinx

      # 6  Artefacts ────────────────────────────────────────────────────────
      - name: Upload firmware images
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.config }}
          path: |
            build/**/unix0.elf
            build/**/unix0.hex
          if-no-files-found: error

      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: docs-${{ matrix.config }}
          path: |
            build/docs            # Sphinx HTML
            build/doxygen/html    # Doxygen HTML
          if-no-files-found: warn
